service:
- docker

env:
  global:
  # github-api-v3-gateway app requires github token
  - secure: "PLL6z6iFOkP1zcJt2R7Yq8ut1313FX70opXUrC7/O0HUEgQdU1q77McSjxxyY4AtzvT+XPgbGNAx5JXuVpHyQ4rnM1Q/3HBz7E2ZHr+71ehLap95x9XKkwShw/Can9IYu66FUGm7sOdN2b01JOpH4IKR50tGeUY9dWzdld10f/Se5KaRjCtzCKsMyMPm02dhUvxvzLn0VWNQDuZC2hAsLsBGOBKc9cGcI03b0u98We8lqyaJ6FT6j0Fjd4t3CycOVR+0XrVbEJ3tFaILmSZoer+N76vqnY42sTyHfbNUPyJboZshy8A19AAngebw4yJWKaHQ+B3eowLcpDRoR32SYnFHgDMtDLLsKMVZeGBvUazORgQpl5YKQeInOKbSku796ZiWz7ciGsCm52ve9dymlX+PUzkfA9J9ylK4XRl9/yLNFfqtjmWLRkP0+V3qRtwCnLU3yd5ZQ7D8t1dhSNJHddvC75oH6Cn/KFOk+4h6jjo+hXOj64ZcjJF8bvYLbdhlFNbNdmq8I9MT0qge95UcufJ9pJk42PL1ojAmxw2REACdW3MMPfcSWukQAuzOgPeZYAjQ9zUIFBqkrrbH2j4Eo+wEq+wwxsgcmBSAkgjdLR9Ni1x/RcqrO1kZ3fXbIr/1P8XXF9d1l0oMDgNjgt64MVT0wwNyxOEPBwGXUO3TkFw="
  - TERM=dumb

language: java
jdk: oraclejdk8
node_js: lts/*

addons:
  apt:
    packages:
    - python-pip
    - libxml2-utils
    - jq
    - curl
    - docker-ce

install: true
before_install:

- sudo pip install docker-compose httpie >/dev/null 2>&1
- source <(curl -fsSL https://raw.github.com/daggerok/bash-functions/master/main.bash)
- stop_any 5432 5672 27017 8080 8000 8081 80 80

script:
- export root=$(pwd)

# awesome-kotlin
- ./mvnw -f ./awesome-kotlin/pom.xml
- bash ./awesome-kotlin/target/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- http :8080/api/v2
- http :8080/api/v1/hello
- stop_any 80 8080

# makrdown-blog
- ./gradlew -b ${root}/makrdown-blog/build.gradle build >/dev/null
- java -jar ${root}/makrdown-blog/build/libs/*.jar &
- wait_for 8080
- http :8080
- http :8080/api
- http :8080/api/2
- http :8080/api/3
- http post :8080/api/1
- http post :8080/api/1
- http post :8080/api/1
- http :8080/api
- http :8080/article/1
- http :8080/article/2
- stop_any 8080 80
##
#- ./mvnw -f ${root}/makrdown-blog/pom.xml package >/dev/null
#- java -jar ${root}/makrdown-blog/target/*.jar &
#- wait_for 8080
#- http :8080
#- http :8080/api
#- http :8080/api/2
#- http :8080/api/3
#- http post :8080/api/1
#- http post :8080/api/1
#- http post :8080/api/1
#- http :8080/api
#- http :8080/article/1
#- http :8080/article/2
#- stop_any 8080 80

## voting-app
#- ./gradlew -b ${root}/voting-app/build.gradle build >/dev/null
#- java -jar ${root}/voting-app/voting-service/build/libs/*.jar &
#- wait_for 8080
#- http :8080
#- stop_any 8080 80
##
#- ./mvnw -f ${root}/voting-app/pom.xml package >/dev/null
#- java -jar ${root}/voting-app/voting-service/target/*.jar &
#- wait_for 8080
#- http :8080/
#- stop_any 8080 80

## boot-jsp
#- ./gradlew -b ${root}/boot-jsp/build.gradle build >/dev/null
#- java -jar ${root}/boot-jsp/build/libs/*.war &
#- wait_for 8080
#- http :8080
#- stop_any 8080 80
##
#- ./mvnw -f ${root}/boot-jsp/pom.xml package >/dev/null
#- java -jar ${root}/boot-jsp/target/*.war &
#- wait_for 8080
#- http :8080/
#- stop_any 8080 80

# spring-ee
- ./mvnw -f ${root}/spring-ee/pom.xml >/dev/null
- ./gradlew composeDown -Pprofile=maven -b ${root}/spring-ee/build.gradle
- ( ./gradlew composeUp -Pprofile=maven -b ${root}/spring-ee/build.gradle & ) || true
- sleep 60
- http :8080/app/api/health
- http :8080/app/welcome
- http :8080/app/
- ./gradlew comDown -Pprofile=maven -b ${root}/spring-ee/build.gradle
- stop_any 8080

# spring-data-jpa-count-query-fix
- bash gradlew -b ${root}/spring-data-jpa-count-query-fix/build.gradle >/dev/null
- java -jar ${root}/spring-data-jpa-count-query-fix/build/libs/*.jar &
- wait_for 8080
- http :8080/api/orders/
- http :8080/api/
- http :8080/
- stop_any 8080

## servlet-and-jsp-registration
#- ./gradlew -b ${root}/servlet-and-jsp-registration/build.gradle build >/dev/null
#- java -jar ${root}/servlet-and-jsp-registration/build/libs/*.war &
#- wait_for 8080
#- http :8080/jsp
#- http :8080/hello
#- http :8080/hola
#- http :8080/превед\!
#- stop_any 8080 80
##
#- ./mvnw -f ${root}/servlet-and-jsp-registration/pom.xml package >/dev/null
#- java -jar ${root}/servlet-and-jsp-registration/target/*.war &
#- wait_for 8080
#- http :8080/jsp
#- http :8080/hello
#- http :8080/hola
#- http :8080/превед\!
#- stop_any 8080 80

# mapdb
- bash gradlew -b ${root}/mapdb/build.gradle >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/mapdb/build/libs/*.jar &
- wait_for 8080
- http :8080 message=hello,\ max!
- http :8080 message=how\ are\ u\?
- stop_any 8080 80

# axon-vote
- bash mvnw -f ${root}/axon-vote/pom.xml >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/axon-vote/target/*.jar &
- wait_for 8080
- http :8080/api/v1/registration id=my-vote name=my=vote
- http put http://localhost:8080/api/v1/registration/approve/my-vote
- http post http://localhost:8080/api/v1/vote/my-vote electorId=dag
- http post http://localhost:8080/api/v1/vote/my-vote electorId=max
- http :8080
- stop_any 8080 8000 80

## some-spring-boot-2-frontend
#- bash gradlew -b ${root}/some-spring-boot-2-frontend/build.gradle >/dev/null
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/some-spring-boot-2-frontend/build/libs/*.jar &
#- wait_for 8080
#- http :8080
#- stop_any 8080 8000 80

# github-api-v3-gateway
- cp -Rf ${root}/github-api-v3-gateway/webflux-gateway/src/main/resources/config/application-github-default.properties ${root}/github-api-v3-gateway/webflux-gateway/src/main/resources/config/application-github.properties
- http -a "$GITHUB_TOKEN" https://api.github.com
#
- bash gradlew -b ${root}/github-api-v3-gateway/build.gradle >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/github-api-v3-gateway/webflux-gateway/build/libs/*.jar &
- wait_for 8080
- http :8080/github/props/manual
- http :8080/github/props
- http :8080/github/search/users/dagg\?page=0\&size=2
- http :8080/github/search/users/dagge\?page=0\&size=2
- http :8080/github/search/users/daggr\?page=0\&size=2
- stop_any 8080 8000 80
#
- bash mvnw -f ${root}/github-api-v3-gateway/pom.xml >/dev/null
- bash mvnw -f ${root}/github-api-v3-gateway/pom.xml -pl webflux-gateway clean package docker-compose:up
- sleep 5
- bash mvnw -f ${root}/github-api-v3-gateway/pom.xml -pl webflux-gateway docker-compose:down
#
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/github-api-v3-gateway/webflux-gateway/target/*.jar &
- wait_for 8080
- http :8080/github/props/manual
- http :8080/github/props
- http :8080
- http :8080/github/search/users/dagg\?page=0\&size=2
- http :8080/github/search/users/dagge\?page=0\&size=2
- http :8080/github/search/users/daggrok\?page=0\&size=2
- stop_any 8080 8000 80
#
- docker-compose -f ${root}/github-api-v3-gateway/webflux-gateway/docker-compose-gradle.yaml build --force-rm --no-cache --pull
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/github-api-v3-gateway/webflux-gateway/docker-compose-gradle.yaml up &
- sleep 20
- docker-compose -f ${root}/github-api-v3-gateway/webflux-gateway/docker-compose-gradle.yaml down -v &

# reactor-processors
- bash gradlew -b ${root}/reactor-processors/build.gradle >/dev/null
- bash mvnw -f ${root}/reactor-processors/pom.xml >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash ${root}/reactor-processors/flux-sink/build/libs/*.jar &
- wait_for 8080
- curl http://127.0.0.1:8080 &
- http :8080 --stream &
- http :8080/message message=hi!
- http :8080/message message=hey!
- stop_any 8080 8000 80

# reactive axon
- bash gradlew -b ${root}/axon-lock/build.gradle >/dev/null
- bash mvnw -f ${root}/axon-lock/pom.xml >/dev/null
- java -jar ${root}/axon-lock/axon-app/build/libs/*.jar --logging.level.root=warn --logging.level.daggerok=debug &
- java -jar ${root}/axon-lock/axon-app/target/*.jar --server.port=8000 --logging.level.root=warn --logging.level.daggerok=debug &
- wait_for 8080 8000
- http :8080 name=Max
- http :8000 name=Axon
- stop_any 8080 8080 8000 8000 80

# kotlin-beans-dsl
- bash gradlew -b ${root}/kotlin-beans-dsl/build.gradle >/dev/null
- java -Dlogging.levelorg=warn -jar ${root}/kotlin-beans-dsl/kotlin-config-dsl/build/libs/*.jar
- bash mvnw -f ${root}/kotlin-beans-dsl/pom.xml >/dev/null
- java -Dlogging.levelorg=warn -jar ${root}/kotlin-beans-dsl/kotlin-config-dsl/target/*.jar

### xml-wtf
#- bash gradlew -b ${root}/xml-wtf/build.gradle >/dev/null
#- java -Dlogging.levelorg=warn -jar ${root}/xml-wtf/kotlin-xml/build/libs/*.jar &
#- bash mvnw -f ${root}/xml-wtf/pom.xml >/dev/null
#- java -Dlogging.levelorg=warn -jar ${root}/xml-wtf/kotlin-xml/target/*.jar --server.port=8000 &
#- wait_for 8080 8000
#- http :8080
#- http :8000
#- stop_any 8080 8000 80
## maven docker
#- docker-compose -f ${root}/xml-wtf/docker-compose-maven.yaml build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/xml-wtf/docker-compose-maven.yaml up --force-recreate --remove-orphans &
#- wait_for 8080
#- sleep 20
#- http :8080
#- docker-compose -f ${root}/xml-wtf/docker-compose-maven.yaml down -v
#- stop_any 8080 8000 80
## gradle docker
#- docker-compose -f ${root}/xml-wtf/docker-compose-gradle.yaml build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/xml-wtf/docker-compose-gradle.yaml up --force-recreate --remove-orphans &
#- wait_for 8080
#- sleep 20
#- http :8080
#- docker-compose -f ${root}/xml-wtf/docker-compose-gradle.yaml down -v
#- stop_any 8080 8000 80

# monolith
- bash gradlew -b ${root}/monolith/build.gradle >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/monolith/app/build/libs/*.jar &
- bash mvnw -f ${root}/monolith/pom.xml >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/monolith/app/target/*.jar --server.port=8000 &
- wait_for 8080 8000
- http :8080
- http --stream :8080/api/v1/messages
- http :8000
- http --stream :8000/api/v1/messages 'accept:application/stream+json'
- stop_any 8080 8080 8000 8000 80 80

## listener-of-listener
#- bash gradlew -b ${root}/listener-of-listener/build.gradle >/dev/null
#- java -jar ${root}/listener-of-listener/kotlin-listeners/build/libs/*.jar --logging.levelorg=warn &
#- bash mvnw -f ${root}/listener-of-listener/pom.xml >/dev/null
#- java -jar ${root}/listener-of-listener/kotlin-listeners/target/*.jar --server.port=8000 --logging.levelorg=warn &
#- wait_for 8080 8000
#- http :8080
#- http :8080 message=send\ message,\ y0!
#- stop_any 8080 8080 8000 8000 80 80
## maven docker
#- docker-compose -f ${root}/listener-of-listener/docker-compose-maven.yaml build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/listener-of-listener/docker-compose-maven.yaml up --force-recreate --remove-orphans &
#- wait_for 8080
#- sleep 20
#- http :8080
#- http :8080 message=send\ message,\ y0!
#- docker-compose -f ${root}/listener-of-listener/docker-compose-maven.yaml down -v
#- stop_any 8080 8080 8000 8000 80 80
## gradle docker
#- docker-compose -f ${root}/listener-of-listener/docker-compose-gradle.yaml build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/listener-of-listener/docker-compose-gradle.yaml up --force-recreate --remove-orphans &
#- wait_for 8080
#- sleep 20
#- http :8080
#- http :8080 message=send\ message,\ y0!
#- docker-compose -f ${root}/listener-of-listener/docker-compose-gradle.yaml down -v
#- stop_any 8080 8080 8000 8000 80 80

# thymeleaf-webflux
- bash gradlew -b ${root}/thymeleaf-webflux/build.gradle clean build            >/dev/null
- java -jar       ${root}/thymeleaf-webflux/reactive-thymeleaf/build/libs/*.jar --logging.level.root=warn --logging.level.daggerok=debug &
- bash mvnw    -f ${root}/thymeleaf-webflux/pom.xml      clean package          >/dev/null
- java -jar       ${root}/thymeleaf-webflux/reactive-thymeleaf/target/*.jar     --logging.level.root=warn --logging.level.daggerok=debug --server.port=8000 &
- wait_for 8080 8000
- http --stream :8080
- http --stream :8000
- stop_any 8080 8000 80 80 8080 8000
# maven docker
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash gradlew -b ${root}/thymeleaf-webflux/build.gradle composeUp   -Pprofile=maven
- wait_for 8080
- http --stream :8080
- bash gradlew -b ${root}/thymeleaf-webflux/build.gradle composeDown -Pprofile=maven
- stop_any 8080 8080 8000 8000 80 80
# gradle docker
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG bash gradlew -b ${root}/thymeleaf-webflux/build.gradle composeUp   -Pprofile=gradle
- wait_for 8080
- http --stream :8080
- bash gradlew -b ${root}/thymeleaf-webflux/build.gradle composeDown -Pprofile=gradle
- stop_any 8080 8080 8000 8000 80 80

### rmi
#- bash gradlew -b ${root}/rmi/build.gradle >/dev/null
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/rmi/spring-rmi-client/build/libs/*.jar &
###lombok edge required - broken with maven
##- bash mvnw -f ${root}/rmi/pom.xml >/dev/null
##- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/rmi/spring-rmi-service/target/*.jar --server.port=8000 &
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/rmi/spring-rmi-service/build/libs//*.jar --server.port=8000 &
#- wait_for 8080 8000
#- http :8080/api/v1/users name=maksimko
#- http :8080/api/v1/users name=maks
#- http :8080/api/v1/users name=max
#- http :8080/api/v1/users
#- stop_any 8080 8080 8000 8000 80 80 1199
## hotel maven docker
#- docker-compose -f ${root}/rmi/docker-compose.yaml build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/rmi/docker-compose.yaml up --force-recreate --remove-orphans &
#- wait_for 8080
#- sleep 20
#- http :8080/api/v1/users name=maksimko
#- http :8080/api/v1/users name=maks
#- http :8080/api/v1/users name=max
#- http :8080/api/v1/users
#- docker-compose -f ${root}/rmi/docker-compose.yaml down -v

# mailbox
- bash gradlew clean build -b ${root}/mailbox/build.gradle >/dev/null
- bash mvnw clean package -f ${root}/mailbox/pom.xml >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/mailbox/webapp/target/*.jar &
- wait_for 8080
- http -a max:max get :8080/
- stop_any 8080 8080 80 80

## hotel gradle
#- bash gradlew clean build -b ${root}/hotel/build.gradle >/dev/null
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/hotel/webapp/build/libs/*.jar &
#- docker-compose -f ${root}/hotel/reservations/docker-compose.yml up -d
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/hotel/reservations/build/libs/*.jar &
#- wait_for 8080 8081
#- http :8081/api/v1/reservations
#- http :8080
#- http :8080?name=Gradle
#- http :8080/actuator/
#- http :8080/actuator/health
#- stop_any 8080 8080 8081 8081 80 80
## hotel maven docker
#- bash mvnw -f ${root}/hotel/pom.xml clean package -U >/dev/null
#- docker-compose -f ${root}/hotel/docker-compose.yaml   build --force-rm --no-cache --pull
#- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/hotel/docker-compose.yaml up --force-recreate --remove-orphans &
#- sleep 20
#- http :8080
#- http :8080?name=Maven
#- http :8080/actuator/
#- http :8080/actuator/health
#- docker-compose -f ${root}/hotel/docker-compose.yaml down -v

# mustache-json gradle
- bash gradlew build -b ${root}/mustache-json/build.gradle >/dev/null
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG java -jar ${root}/mustache-json/build/libs/*.jar &
- wait_for 8080
- http :8080
- http :8080/hello/
- http :8080/hello/mustache
- stop_any 8080 8080 80 80
# mustache-json docker
- bash ./gradlew clean build >/dev/null
- docker-compose -f ${root}/mustache-json/docker-compose.yaml build --force-rm --no-cache --pull
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/mustache-json/docker-compose.yaml up --force-recreate --remove-orphans &
- wait_for 8080
- sleep 20
- http :8080
- http :8080/hello
- http :8080/hello/lol
- docker-compose -f ${root}/mustache-json/docker-compose.yaml down -v
- stop_any 8080 8080 80 80

# reactive-ngrx gradle
- bash mvnw -f ${root}/reactive-ngrx/pom.xml >/dev/null
- java -jar ${root}/reactive-ngrx/target/*.jar --loging.level=warn &
- wait_for 8080
- http :8080
- stop_any 8080 8000 80
# reactive-ngrx docker
- bash gradlew -b ${root}/reactive-ngrx/build.gradle >/dev/null
- docker-compose -f ${root}/reactive-ngrx/src/main/docker/docker-compose.yaml build --force-rm --no-cache --pull
- LOGGING_LEVEL_ROOT=WARN LOGGING_LEVEL_DAGGEROK=DEBUG docker-compose -f ${root}/reactive-ngrx/src/main/docker/docker-compose.yaml up &
- wait_for 8001 8002
- sleep 30
- http :8001
- http :8002
- docker-compose -f ${root}/reactive-ngrx/src/main/docker/docker-compose.yaml down -v
- stop_any 8001 8002 80

- >
  for path in \
    spring-shell \
    reactive-websocket-sse \
    spring-boot-under-the-hood \
    reactive-auth \
    reactive-security-client \
    reactive-functional-security \
    reactive-mongo-webflux-functional \
    reactive-mongo-webflux \
    reactive-webflux-spring-data-redis \
    spring-integration-5-example \
    functional-spring;
  do
    export project="${root}/$path"
    cd ${project}
    echo "build $path"
    bash gradlew build >/dev/null
  done;

cache:
  directories:
  - $HOME/.m2
  - $HOME/.gradle
  - $HOME/.docker

notifications:
  email: false
